version: 2
jobs:
  build:
    working_directory: ~/perf-check-ci
    docker:
      - image: mast/perf-check:2.6.3-3
        environment:
          RAILS_ENV: test
          POSTGRES_DB: circle-test_test
          POSTGRES_USER: root
          POSTGRES_PASSWORD: circleci_test
      - image: postgres:11
        environment:
          POSTGRES_DB: circle-test_test
          POSTGRES_USER: root
          POSTGRES_PASSWORD: circleci_test
      - image: redis:latest
    steps:
      # Checkout
      - restore_cache:
          keys:
            - source-v1-{{ .Branch }}-{{ .Revision }}
            - source-v1-{{ .Branch }}-
            - source-v1-
      - checkout
      - save_cache:
          key: source-v1-{{ .Branch }}-{{ .Revision }}
          paths:
            - ".git"

      # Bundle
      - restore_cache:
          keys:
            - gem-cache-v1-{{ arch }}-{{ .Branch }}-{{ checksum "Gemfile.lock" }}
            - gem-cache-v1-{{ arch }}-{{ .Branch }}
            - gem-cache-v1
      - run: bundle install --jobs=3 --retry=3 --path vendor/bundle
      - save_cache:
          key: gem-cache-v1-{{ arch }}-{{ .Branch }}-{{ checksum "Gemfile.lock" }}
          paths:
           - vendor/bundle

      # Wait for Postgres and copy configuration
      - run: dockerize -wait tcp://localhost:5432 -timeout 10s
      - run: cp .circleci/database.yml config/database.yml
      - run: git config --global user.email "john@example.com"
      - run: git config --global user.name "John Parcival"

      # Yarn
      - restore_cache:
          keys:
            - yarn-cache-v1-{{ arch }}-{{ .Branch }}-{{ checksum "Gemfile.lock" }}
            - yarn-cache-v1-{{ arch }}-{{ .Branch }}
            - yarn-cache-v1
      - run: yarn install
      - save_cache:
          key: yarn-cache-v1-{{ arch }}-{{ .Branch }}-{{ checksum "package.json" }}
          paths:
           - node_modules

      # Run all tests
      - run: bundle exec rails test
